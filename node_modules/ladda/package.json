{
  "_args": [
    [
      {
        "raw": "ladda@^1.0.0",
        "scope": null,
        "escapedName": "ladda",
        "name": "ladda",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "E:\\wamp64\\www\\frontStarter\\node_modules\\angular2-ladda"
    ]
  ],
  "_from": "ladda@>=1.0.0 <2.0.0",
  "_id": "ladda@1.0.0",
  "_inCache": true,
  "_location": "/ladda",
  "_nodeVersion": "5.7.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/ladda-1.0.0.tgz_1457425978014_0.5676924008876085"
  },
  "_npmUser": {
    "name": "hakimel",
    "email": "hakim.elhattab@gmail.com"
  },
  "_npmVersion": "3.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ladda@^1.0.0",
    "scope": null,
    "escapedName": "ladda",
    "name": "ladda",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/angular2-ladda"
  ],
  "_resolved": "https://registry.npmjs.org/ladda/-/ladda-1.0.0.tgz",
  "_shasum": "447687ca4aeda438f616cb7710d8063ac96e9f29",
  "_shrinkwrap": null,
  "_spec": "ladda@^1.0.0",
  "_where": "E:\\wamp64\\www\\frontStarter\\node_modules\\angular2-ladda",
  "author": {
    "name": "Hakim El Hattab",
    "email": "hakim.elhattab@gmail.com",
    "url": "http://hakim.se"
  },
  "browser": {
    "spin.js": "./js/spin.js"
  },
  "bugs": {
    "url": "https://github.com/hakimel/Ladda/issues"
  },
  "dependencies": {
    "spin.js": "^2.0.0"
  },
  "description": "Buttons with built-in loading indicators",
  "devDependencies": {
    "grunt": "~0.4.5",
    "grunt-contrib-connect": "~0.2.0",
    "grunt-contrib-jshint": "~0.11.3",
    "grunt-contrib-sass": "~0.8.1",
    "grunt-contrib-uglify": "~0.9.2",
    "grunt-contrib-watch": "~0.6.1"
  },
  "directories": {},
  "dist": {
    "shasum": "447687ca4aeda438f616cb7710d8063ac96e9f29",
    "tarball": "https://registry.npmjs.org/ladda/-/ladda-1.0.0.tgz"
  },
  "gitHead": "e5fa9e7681334a47419a126bdcb6aaefd05424da",
  "homepage": "http://lab.hakim.se/ladda",
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/hakimel/Ladda/blob/master/LICENSE"
    }
  ],
  "main": "./dist/ladda.min",
  "maintainers": [
    {
      "name": "hakimel",
      "email": "hakim.elhattab@gmail.com"
    }
  ],
  "name": "ladda",
  "optionalDependencies": {},
  "readme": "# Ladda\n\nButtons with built-in loading indicators, effectively bridging the gap between action and feedback.\n\n[Check out the demo page](http://lab.hakim.se/ladda/).\n\n\n## Instructions\n\nRelease downloads and change history is available here <https://github.com/hakimel/Ladda/releases>.\n\nThe compiled files for the project that you should be using are available in the **/dist** directory. You will need to include both the **ladda.min.js** and **spin.min.js** files as well as ONE of the two style sheets. If you want the button styles used in the [Ladda example page](http://lab.hakim.se/ladda) use the **ladda.min.css** file, if you want to have the functional buttons without the visual style (colors, padding etc) use the **ladda-themeless.min.css** file.\n\n#### HTML\n\nLadda buttons must be given the class ```ladda-button``` and the button label needs to have the ```ladda-label``` class. The ```ladda-label``` will be automatically created if it does not exist in the DOM. Below is an example of a button which will use the expand-right animation style.\n\n```html\n<button class=\"ladda-button\" data-style=\"expand-right\"><span class=\"ladda-label\">Submit</span></button>\n```\n\nButtons accept the following attributes:\n- **data-style**: one of the button styles, full list in [demo](http://lab.hakim.se/ladda/) *[required]*\n- **data-color**: green/red/blue/purple/mint\n- **data-size**: xs/s/l/xl, defaults to medium\n- **data-spinner-size**: 40, pixel dimensions of spinner, defaults to dynamic size based on the button height\n- **data-spinner-color**: A hex code or any [named CSS color](http://css-tricks.com/snippets/css/named-colors-and-hex-equivalents/).\n- **data-spinner-lines**: 12, the number of lines the for the spinner, defaults to 12\n\n#### JavaScript\n\nIf you will be using the loading animation for a form that is submitted to the server (always resulting in a page reload) you can use the ```bind()``` method:\n\n```javascript\n// Automatically trigger the loading animation on click\nLadda.bind( 'button[type=submit]' );\n\n// Same as the above but automatically stops after two seconds\nLadda.bind( 'button[type=submit]', { timeout: 2000 } );\n```\n\nIf you want JavaScript control over your buttons you can use the following approach:\n\n```javascript\n// Create a new instance of ladda for the specified button\nvar l = Ladda.create( document.querySelector( '.my-button' ) );\n\n// Start loading\nl.start();\n\n// Will display a progress bar for 50% of the button width\nl.setProgress( 0.5 );\n\n// Stop loading\nl.stop();\n\n// Toggle between loading/not loading states\nl.toggle();\n\n// Check the current state\nl.isLoading();\n\n// Delete the button's ladda instance\nl.remove();\n```\n\nAll loading animations on the page can be stopped by using:\n\n```javascript\nLadda.stopAll();\n```\n\n#### With jQuery\n\nIf you will be using the loading animation for a form that is submitted to the server (always resulting in a page reload) you can use the ```ladda('bind')``` method:\n\n```javascript\n// Automatically trigger the loading animation on click\n$( 'button[type=submit]' ).ladda( 'bind' );\n\n// Same as the above but automatically stops after two seconds\n$( 'button[type=submit]' ).ladda( 'bind', { timeout: 2000 } );\n```\n\nIf you want JavaScript control over your buttons you can use the following approach:\n\n```javascript\n// Create a new instance of ladda for the specified button\nvar l = $( '.my-button' ).ladda();\n\n// Start loading\nl.ladda( 'start' );\n\n// Will display a progress bar for 50% of the button width\nl.ladda( 'setProgress', 0.5 );\n\n// Stop loading\nl.ladda( 'stop' );\n\n// Toggle between loading/not loading states\nl.ladda( 'toggle' );\n\n// Check the current state\nl.ladda( 'isLoading' );\n```\n\nAll loading animations on the page can be stopped by using:\n\n```javascript\n$.ladda( 'stopAll' );\n```\n\n## Module\n\nYou can `bower install ladda` or `npm install ladda`. The spinner and Ladda can be loaded as a module using AMD.\n\n```javascript\n// Using Require.js\ndefine(['ladda'], function(Ladda) {\n\t// Make Buttons Here\n});\n```\n\nOr in Common.js, you will:\n\n```javascript\nvar ladda = require('ladda');\n```\n\n## Browser support\n\nThe project is tested in Chrome and Firefox. It Should Workâ„¢ in the current stable releases of Chrome, Firefox, Safari as well as IE9 and up.\n\n## Changelog\n\n<https://github.com/hakimel/Ladda/releases>\n\n## License\n\nMIT licensed\n\nCopyright (C) 2016 Hakim El Hattab, http://hakim.se\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/hakimel/Ladda.git"
  },
  "scripts": {
    "start": "",
    "test": "grunt jshint"
  },
  "version": "1.0.0"
}
